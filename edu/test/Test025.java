package com.edu.test;

import java.util.Scanner;

/*
 * 10^12  <  1*2*3*5*7*11*13*17*19*23*29*31*37
 */
public class Test025 {

	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		int[][] primes = { {2,0},{3,0},{5,0},{7,0},{11,0},{13,0},{17,0},{19,0},{23,0},{29,0},{31,0},{37,0},{41,0},{43,0},{47,0},{53,0},{59,0},{61,0},{67,0},{71,0},{73,0},{79,0},{83,0},{89,0},{97,0},{101,0},{103,0},{107,0},{109,0},{113,0},{121,0},{127,0},{131,0},{137,0},{139,0},{143,0},{149,0},{151,0},{157,0},{163,0},{167,0},{169,0},{173,0},{179,0},{181,0},{187,0},{191,0},{193,0},{197,0},{199,0},{205,0},{209,0},{211,0},{215,0},{221,0},{223,0},{227,0},{229,0},{233,0},{235,0},{239,0},{241,0},{247,0},{251,0},{253,0},{257,0},{263,0},{265,0},{269,0},{271,0},{275,0},{277,0},{281,0},{283,0},{289,0},{293,0},{295,0},{299,0},{305,0},{307,0},{311,0},{313,0},{317,0},{319,0},{323,0},{325,0},{331,0},{335,0},{337,0},{341,0},{347,0},{349,0},{353,0},{355,0},{359,0},{361,0},{365,0},{367,0},{373,0},{377,0},{379,0},{383,0},{389,0},{391,0},{395,0},{397,0} };
		int t = 1;
		Scanner s = new Scanner(System.in);
		long n = s.nextLong();
		int i = 0;
		if (isPrime(n)) {
			System.out.println(n);
		} else {
			while (i < primes.length) {
				while (true) {
					if (n % primes[i][0] != 0 || n == 1) {
						break;
					} else {
						primes[i][1]++;
						n = n / primes[i][0];
					}
				}
				i++;
			}
			for (int[] k : primes) {
				if (k[1] > 0) {
					t *= k[0];
				}
//				System.out.println(k[0] + "/" + k[1]);
			}
			System.out.println(t);
		}
	}

	public static boolean isPrime(long a) {
		boolean flag = true;
		if (a < 2) {// 素数不小于2
			return false;
		} else {
			for (int i = 2; i <= Math.sqrt(a); i++) {
				if (a % i == 0) {// 若能被整除，则说明不是素数，返回false
					flag = false;
					break;// 跳出循环
				}
			}
		}
		return flag;
	}

}
